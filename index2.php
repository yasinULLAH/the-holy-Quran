<?php
ini_set('display_errors', 0);
error_reporting(0);
@set_time_limit(300);
@ini_set('memory_limit', '256M');
session_start();

define('DB_FILE', 'quran.db');
define('DATA_FILE', 'data/data.AM');
define('BASE_URL', $_SERVER['PHP_SELF']);
define('AYAH_PER_PAGE', 20);
define('SEARCH_RESULTS_PER_PAGE', 10);

// --- Database Setup ---
function db_connect() {
    static $db = null;
    if ($db === null) {
        try {
            $db_dir = dirname(DB_FILE);
            if (!is_dir($db_dir)) { @mkdir($db_dir, 0755, true); }
            if (!is_writable($db_dir) || (file_exists(DB_FILE) && !is_writable(DB_FILE))) {
                 @chmod($db_dir, 0755); if(file_exists(DB_FILE)) @chmod(DB_FILE, 0644);
                 if (!is_writable($db_dir) || (file_exists(DB_FILE) && !is_writable(DB_FILE))) { die("Error: Database directory/file not writable: '" . realpath($db_dir) . "'."); }
            }
            $db = new PDO('sqlite:' . DB_FILE);
            $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            $db->setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE, PDO::FETCH_ASSOC);
            $db->exec('PRAGMA journal_mode = WAL;');
            setup_database($db);
        } catch (PDOException $e) { die("Database connection failed: " . $e->getMessage()); }
    }
    return $db;
}

function setup_database($db) {
    $db->exec("CREATE TABLE IF NOT EXISTS ayahs ( id INTEGER PRIMARY KEY AUTOINCREMENT, surah_number INTEGER NOT NULL, ayah_number INTEGER NOT NULL, arabic_text TEXT NOT NULL, urdu_translation TEXT NOT NULL, UNIQUE(surah_number, ayah_number) )");
    $db->exec("CREATE TABLE IF NOT EXISTS users ( id INTEGER PRIMARY KEY AUTOINCREMENT, email TEXT UNIQUE NOT NULL, password TEXT NOT NULL, role TEXT NOT NULL DEFAULT 'public', last_reading_surah INTEGER DEFAULT 1, last_reading_ayah INTEGER DEFAULT 1 )");
    $db->exec("CREATE TABLE IF NOT EXISTS bookmarks ( id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, surah_number INTEGER NOT NULL, ayah_number INTEGER NOT NULL, FOREIGN KEY(user_id) REFERENCES users(id) ON DELETE CASCADE, UNIQUE(user_id, surah_number, ayah_number) )");
    $stmt = $db->prepare("SELECT COUNT(*) FROM users WHERE email = ?"); $stmt->execute(['admin@example.com']);
    if ($stmt->fetchColumn() == 0) { $db->prepare("INSERT INTO users (email, password, role) VALUES (?, ?, ?)")->execute(['admin@example.com', password_hash('password', PASSWORD_DEFAULT), 'admin']); }
}

// --- Security ---
function generate_csrf_token() { if (empty($_SESSION['csrf_token'])) { $_SESSION['csrf_token'] = bin2hex(random_bytes(32)); } return $_SESSION['csrf_token']; }
function verify_csrf_token($token) { return isset($_SESSION['csrf_token']) && hash_equals($_SESSION['csrf_token'], $token); }
function sanitize($data) { if (is_array($data)) { return array_map('sanitize', $data); } return htmlspecialchars(trim($data), ENT_QUOTES | ENT_HTML5 | ENT_SUBSTITUTE, 'UTF-8'); }
function get_sanitized_input($method = INPUT_POST) {
    $input = ($method === INPUT_POST) ? $_POST : $_GET;
    if (is_array($input)) { array_walk_recursive($input, function(&$item) { if (is_string($item) && !mb_check_encoding($item, 'UTF-8')) { $item = mb_convert_encoding($item, 'UTF-8', 'UTF-8'); } }); }
    elseif (is_string($input) && !mb_check_encoding($input, 'UTF-8')) { $input = mb_convert_encoding($input, 'UTF-8', 'UTF-8'); }
    return sanitize($input);
}

// --- Auth & Roles ---
function my_get_current_user() { if (isset($_SESSION['user_id'])) { $db = db_connect(); $stmt = $db->prepare("SELECT id, email, role, last_reading_surah, last_reading_ayah FROM users WHERE id = ?"); $stmt->execute([$_SESSION['user_id']]); return $stmt->fetch(); } return null; }
function is_logged_in() { return isset($_SESSION['user_id']); }
function get_user_role() { $user = my_get_current_user(); return $user ? $user['role'] : 'public'; }
function is_admin() { return get_user_role() === 'admin'; }
function require_login() { if (!is_logged_in()) { redirect(BASE_URL . '?action=login&message=Login required'); } }
function require_admin() { require_login(); if (!is_admin()) { redirect(BASE_URL . '?message=Admin access required'); } }

// --- Auth Handlers ---
function handle_login($input) { if (!verify_csrf_token($input['csrf_token'] ?? '')) { return 'Invalid CSRF token.'; } $email = filter_var($input['email'] ?? '', FILTER_VALIDATE_EMAIL); $password = $input['password'] ?? ''; if (!$email || empty($password)) { return 'Invalid email or password.'; } $db = db_connect(); $stmt = $db->prepare("SELECT id, password, role FROM users WHERE email = ?"); $stmt->execute([$email]); $user = $stmt->fetch(); if ($user && password_verify($password, $user['password'])) { session_regenerate_id(true); $_SESSION['user_id'] = $user['id']; $_SESSION['user_role'] = $user['role']; unset($_SESSION['csrf_token']); generate_csrf_token(); redirect(BASE_URL . '?action=account'); } else { return 'Incorrect email or password.'; } }
function handle_register($input) { if (!verify_csrf_token($input['csrf_token'] ?? '')) { return 'Invalid CSRF token.'; } $email = filter_var($input['email'] ?? '', FILTER_VALIDATE_EMAIL); $password = $input['password'] ?? ''; $confirm_password = $input['confirm_password'] ?? ''; if (!$email) return 'Invalid email address.'; if (empty($password) || strlen($password) < 6) return 'Password must be at least 6 characters.'; if ($password !== $confirm_password) return 'Passwords do not match.'; $db = db_connect(); $stmt = $db->prepare("SELECT id FROM users WHERE email = ?"); $stmt->execute([$email]); if ($stmt->fetch()) { return 'Email already registered.'; } $hashed_password = password_hash($password, PASSWORD_DEFAULT); $stmt = $db->prepare("INSERT INTO users (email, password, role) VALUES (?, ?, ?)"); if ($stmt->execute([$email, $hashed_password, 'user'])) { $user_id = $db->lastInsertId(); session_regenerate_id(true); $_SESSION['user_id'] = $user_id; $_SESSION['user_role'] = 'user'; unset($_SESSION['csrf_token']); generate_csrf_token(); redirect(BASE_URL . '?action=account&message=Registration successful!'); } else { return 'Registration failed.'; } }
function handle_logout() { session_unset(); session_destroy(); redirect(BASE_URL . '?message=Logged out.'); }

// --- Core Logic: Quran Data ---
function get_total_ayahs($db, $surah_number = null) { if ($surah_number) { $stmt = $db->prepare("SELECT COUNT(*) FROM ayahs WHERE surah_number = ?"); $stmt->execute([$surah_number]); } else { $stmt = $db->query("SELECT COUNT(*) FROM ayahs"); } return (int)$stmt->fetchColumn(); }
function get_surah_info($db) { $stmt = $db->query("SELECT surah_number, COUNT(*) as ayah_count FROM ayahs GROUP BY surah_number ORDER BY surah_number"); $surahs = []; while ($row = $stmt->fetch()) { $surahs[$row['surah_number']] = ['number' => $row['surah_number'], 'ayah_count' => $row['ayah_count']]; } $surahNames = [1=>"Al-Fatiha", 2=>"Al-Baqarah", 3=>"Aal-e-Imran", 4=>"An-Nisa", 5=>"Al-Ma'idah", 6=>"Al-An'am", 7=>"Al-A'raf", 8=>"Al-Anfal", 9=>"At-Tawbah", 10=>"Yunus", 11=>"Hud", 12=>"Yusuf", 13=>"Ar-Ra'd", 14=>"Ibrahim", 15=>"Al-Hijr", 16=>"An-Nahl", 17=>"Al-Isra", 18=>"Al-Kahf", 19=>"Maryam", 20=>"Taha", 21=>"Al-Anbiya", 22=>"Al-Hajj", 23=>"Al-Mu'minun", 24=>"An-Nur", 25=>"Al-Furqan", 26=>"Ash-Shu'ara", 27=>"An-Naml", 28=>"Al-Qasas", 29=>"Al-Ankabut", 30=>"Ar-Rum", 31=>"Luqman", 32=>"As-Sajdah", 33=>"Al-Ahzab", 34=>"Saba", 35=>"Fatir", 36=>"Ya-Sin", 37=>"As-Saffat", 38=>"Sad", 39=>"Az-Zumar", 40=>"Ghafir", 41=>"Fussilat", 42=>"Ash-Shura", 43=>"Az-Zukhruf", 44=>"Ad-Dukhan", 45=>"Al-Jathiyah", 46=>"Al-Ahqaf", 47=>"Muhammad", 48=>"Al-Fath", 49=>"Al-Hujurat", 50=>"Qaf", 51=>"Adh-Dhariyat", 52=>"At-Tur", 53=>"An-Najm", 54=>"Al-Qamar", 55=>"Ar-Rahman", 56=>"Al-Waqi'ah", 57=>"Al-Hadid", 58=>"Al-Mujadila", 59=>"Al-Hashr", 60=>"Al-Mumtahanah", 61=>"As-Saff", 62=>"Al-Jumu'ah", 63=>"Al-Munafiqun", 64=>"At-Taghabun", 65=>"At-Talaq", 66=>"At-Tahrim", 67=>"Al-Mulk", 68=>"Al-Qalam", 69=>"Al-Haqqah", 70=>"Al-Ma'arij", 71=>"Nuh", 72=>"Al-Jinn", 73=>"Al-Muzzammil", 74=>"Al-Muddaththir", 75=>"Al-Qiyamah", 76=>"Al-Insan", 77=>"Al-Mursalat", 78=>"An-Naba", 79=>"An-Nazi'at", 80=>"Abasa", 81=>"At-Takwir", 82=>"Al-Infitar", 83=>"Al-Mutaffifin", 84=>"Al-Inshiqaq", 85=>"Al-Buruj", 86=>"At-Tariq", 87=>"Al-Ala", 88=>"Al-Ghashiyah", 89=>"Al-Fajr", 90=>"Al-Balad", 91=>"Ash-Shams", 92=>"Al-Layl", 93=>"Ad-Duhaa", 94=>"Ash-Sharh", 95=>"At-Tin", 96=>"Al-Alaq", 97=>"Al-Qadr", 98=>"Al-Bayyinah", 99=>"Az-Zalzalah", 100=>"Al-Adiyat", 101=>"Al-Qari'ah", 102=>"At-Takathur", 103=>"Al-Asr", 104=>"Al-Humazah", 105=>"Al-Fil", 106=>"Quraysh", 107=>"Al-Ma'un", 108=>"Al-Kawthar", 109=>"Al-Kafirun", 110=>"An-Nasr", 111=>"Al-Masad", 112=>"Al-Ikhlas", 113=>"Al-Falaq", 114=>"An-Nas"]; foreach ($surahs as $num => &$data) { $data['name'] = $surahNames[$num] ?? "Surah {$num}"; } return $surahs; }
function get_ayahs($surah, $page = 1) { $db = db_connect(); $offset = ($page - 1) * AYAH_PER_PAGE; $stmt = $db->prepare("SELECT * FROM ayahs WHERE surah_number = ? ORDER BY ayah_number LIMIT ? OFFSET ?"); $stmt->bindValue(1, $surah, PDO::PARAM_INT); $stmt->bindValue(2, AYAH_PER_PAGE, PDO::PARAM_INT); $stmt->bindValue(3, $offset, PDO::PARAM_INT); $stmt->execute(); return $stmt->fetchAll(); }
function get_single_ayah($surah, $ayah) { $db = db_connect(); $stmt = $db->prepare("SELECT * FROM ayahs WHERE surah_number = ? AND ayah_number = ?"); $stmt->execute([$surah, $ayah]); return $stmt->fetch(); }
function get_random_ayahs($count = 10) { $db = db_connect(); $stmt = $db->query("SELECT * FROM ayahs ORDER BY RANDOM() LIMIT " . (int)$count); return $stmt->fetchAll(); }
function search_ayahs($query, $page = 1) { $db = db_connect(); $offset = ($page - 1) * SEARCH_RESULTS_PER_PAGE; $searchTerm = '%' . $query . '%'; $stmt_results = $db->prepare("SELECT * FROM ayahs WHERE arabic_text LIKE :term OR urdu_translation LIKE :term COLLATE NOCASE ORDER BY surah_number, ayah_number LIMIT :limit OFFSET :offset"); $stmt_results->bindValue(':term', $searchTerm, PDO::PARAM_STR); $stmt_results->bindValue(':limit', SEARCH_RESULTS_PER_PAGE, PDO::PARAM_INT); $stmt_results->bindValue(':offset', $offset, PDO::PARAM_INT); $stmt_results->execute(); $results = $stmt_results->fetchAll(); $stmt_count = $db->prepare("SELECT COUNT(*) FROM ayahs WHERE arabic_text LIKE :term OR urdu_translation LIKE :term COLLATE NOCASE"); $stmt_count->bindValue(':term', $searchTerm, PDO::PARAM_STR); $stmt_count->execute(); $total_results = (int)$stmt_count->fetchColumn(); return ['results' => $results, 'total' => $total_results]; }
function update_reading_progress($user_id, $surah, $ayah) { $db = db_connect(); $stmt = $db->prepare("UPDATE users SET last_reading_surah = ?, last_reading_ayah = ? WHERE id = ?"); $stmt->execute([$surah, $ayah, $user_id]); }
function add_bookmark($user_id, $surah, $ayah) { $db = db_connect(); try { $stmt = $db->prepare("INSERT OR IGNORE INTO bookmarks (user_id, surah_number, ayah_number) VALUES (?, ?, ?)"); return $stmt->execute([$user_id, $surah, $ayah]); } catch (PDOException $e) { error_log("Bookmark error: " . $e->getMessage()); return false; } }
function remove_bookmark($user_id, $surah, $ayah) { $db = db_connect(); $stmt = $db->prepare("DELETE FROM bookmarks WHERE user_id = ? AND surah_number = ? AND ayah_number = ?"); return $stmt->execute([$user_id, $surah, $ayah]); }
function get_bookmarks($user_id) { $db = db_connect(); $stmt = $db->prepare("SELECT b.surah_number, b.ayah_number, a.arabic_text, a.urdu_translation FROM bookmarks b JOIN ayahs a ON b.surah_number = a.surah_number AND b.ayah_number = a.ayah_number WHERE b.user_id = ? ORDER BY b.surah_number, b.ayah_number"); $stmt->execute([$user_id]); return $stmt->fetchAll(); }
function is_bookmarked($user_id, $surah, $ayah) { $db = db_connect(); $stmt = $db->prepare("SELECT COUNT(*) FROM bookmarks WHERE user_id = ? AND surah_number = ? AND ayah_number = ?"); $stmt->execute([$user_id, $surah, $ayah]); return $stmt->fetchColumn() > 0; }

// --- Data Import ---
function import_data_from_am() {
    $data_dir = dirname(DATA_FILE); if (!is_dir($data_dir)) { @mkdir($data_dir, 0755, true); if (!is_dir($data_dir)) return "Error: Cannot create data dir '" . $data_dir . "'."; }
    if (!file_exists(DATA_FILE)) { return "Error: Data file not found: " . DATA_FILE; } if (!is_readable(DATA_FILE)) { return "Error: Data file not readable: " . DATA_FILE; }
    $db = db_connect(); $handle = fopen(DATA_FILE, "r"); if (!$handle) { return "Error: Could not open data file: " . DATA_FILE; }

    $db->beginTransaction();
    // Prepare statement outside the loop for efficiency
    $stmt_exec = $db->prepare("INSERT OR IGNORE INTO ayahs (surah_number, ayah_number, arabic_text, urdu_translation) VALUES (:sn, :an, :at, :ut)");
    $count = 0; $errors = 0; $processed_lines = 0; $error_details = [];

    // Regex: Greedy Urdu capture (.*), relying on specific end pattern. Flexible spacing.
    $regex = '/^(.+?)\s*ترجمہ:\s*(.*)\s*(?:<br\s*\/?>)?\s*س\s*(\d{3})\s*آ\s*(\d{3})\s*$/u';

    while (($line = fgets($handle)) !== false) {
        $processed_lines++;
        // Store original line for logging before modification
        $original_line = $line;
        if (!mb_check_encoding($line, 'UTF-8')) { $line = mb_convert_encoding($line, 'UTF-8', 'UTF-8'); }
        $line = trim($line); if (empty($line)) continue;

        if (preg_match($regex, $line, $matches)) {
            $arabic_text = trim($matches[1]); $urdu_translation = trim($matches[2]); $surah_number = (int)$matches[3]; $ayah_number = (int)$matches[4];
            if ($surah_number >= 1 && $surah_number <= 114 && $ayah_number >= 1 && !empty($arabic_text)) {
                 try {
                    // Bind parameters explicitly
                    $stmt_exec->bindValue(':sn', $surah_number, PDO::PARAM_INT);
                    $stmt_exec->bindValue(':an', $ayah_number, PDO::PARAM_INT);
                    $stmt_exec->bindValue(':at', $arabic_text, PDO::PARAM_STR);
                    $stmt_exec->bindValue(':ut', $urdu_translation, PDO::PARAM_STR);

                    if ($stmt_exec->execute()) { if ($stmt_exec->rowCount() > 0) $count++; }
                    else { $errors++; $ei = $stmt_exec->errorInfo(); $ed = "Line {$processed_lines}: DB Err [{$ei[0]}|{$ei[1]}]: {$ei[2]}"; $error_details[] = $ed; error_log("Import ".$ed." | Line: ".trim($original_line)); }
                 } catch (PDOException $e) { $errors++; $ed = "Line {$processed_lines}: PDO Err: " . $e->getMessage(); $error_details[] = $ed; error_log("Import ".$ed." | Line: ".trim($original_line)); }
            } else { $errors++; $ed = "Line {$processed_lines}: Invalid Data (S={$surah_number}, A={$ayah_number})"; $error_details[] = $ed; error_log("Import ".$ed." | Line: ".trim($original_line)); }
        } else { $errors++; $ed = "Line {$processed_lines}: Regex Mismatch"; $error_details[] = $ed; error_log("Import ".$ed." | Line: ".trim($original_line)); }
        // Stop after a reasonable number of errors to prevent log flooding
        if ($errors > 10) { $ed = "Too many errors ({$errors}), aborting."; $error_details[] = $ed; error_log("Import aborted: ".$ed); break; }
    } fclose($handle);

    if ($errors > 0) { $db->rollBack(); $es = implode("<br>", array_slice($error_details, 0, 5)); return "Import failed: {$errors} errors / {$processed_lines} lines. DB rolled back. Check PHP error log. First few errors:<br><pre>{$es}</pre>"; }
    else { $db->commit(); return "Import successful: {$processed_lines} lines processed. {$count} new ayahs added/ignored."; }
}


// --- Admin Functions ---
function get_all_users() { $db = db_connect(); $stmt = $db->query("SELECT id, email, role FROM users ORDER BY id"); return $stmt->fetchAll(); }
function get_user_by_id($user_id) { $db = db_connect(); $stmt = $db->prepare("SELECT id, email, role FROM users WHERE id = ?"); $stmt->execute([$user_id]); return $stmt->fetch(); }
function update_user($user_id, $email, $role, $password = null) { $db = db_connect(); if ($password) { $hp = password_hash($password, PASSWORD_DEFAULT); $stmt = $db->prepare("UPDATE users SET email = ?, role = ?, password = ? WHERE id = ?"); return $stmt->execute([$email, $role, $hp, $user_id]); } else { $stmt = $db->prepare("UPDATE users SET email = ?, role = ? WHERE id = ?"); return $stmt->execute([$email, $role, $user_id]); } }
function delete_user($user_id) { $db = db_connect(); $stmt = $db->prepare("DELETE FROM users WHERE id = ?"); return $stmt->execute([$user_id]); }
function get_stats() { $db = db_connect(); $tu = $db->query("SELECT COUNT(*) FROM users")->fetchColumn(); $ta = $db->query("SELECT COUNT(*) FROM ayahs")->fetchColumn(); $tb = $db->query("SELECT COUNT(*) FROM bookmarks")->fetchColumn(); return [ 'total_users' => $tu, 'total_ayahs' => $ta, 'total_bookmarks' => $tb ]; }

// --- Helpers ---
function redirect($url) { header("Location: " . $url); exit; }
function get_audio_url($surah, $ayah) { $ed = 'ar.alafasy'; $agi = get_global_ayah_index($surah, $ayah); return $agi ? "https://cdn.islamic.network/quran/audio/128/{$ed}/{$agi}.mp3" : null; }
function get_global_ayah_index($surah, $ayah) { static $acb = null; if ($acb === null) { $db = db_connect(); $acb = []; $stmt = $db->query("SELECT surah_number, COUNT(*) as count FROM ayahs GROUP BY surah_number"); $c = $stmt->fetchAll(PDO::FETCH_KEY_PAIR); $t = 0; for($i = 1; $i <= 114; $i++) { $acb[$i] = $t; $t += ($c[$i] ?? 0); } } return isset($acb[$surah]) ? $acb[$surah] + $ayah : null; }
function get_surah_name($sn) { $names = [1=>"الفاتحة", 2=>"البقرة", 3=>"آل عمران", 4=>"النساء", 5=>"المائدة", 6=>"الأنعام", 7=>"الأعراف", 8=>"الأنفال", 9=>"التوبة", 10=>"يونس", 11=>"هود", 12=>"يوسف", 13=>"الرعد", 14=>"ابراهيم", 15=>"الحجر", 16=>"النحل", 17=>"الإسراء", 18=>"الكهف", 19=>"مريم", 20=>"طه", 21=>"الأنبياء", 22=>"الحج", 23=>"المؤمنون", 24=>"النور", 25=>"الفرقان", 26=>"الشعراء", 27=>"النمل", 28=>"القصص", 29=>"العنكبوت", 30=>"الروم", 31=>"لقمان", 32=>"السجدة", 33=>"الأحزاب", 34=>"سبإ", 35=>"فاطر", 36=>"يس", 37=>"الصافات", 38=>"ص", 39=>"الزمر", 40=>"غافر", 41=>"فصلت", 42=>"الشورى", 43=>"الزخرف", 44=>"الدخان", 45=>"الجاثية", 46=>"الأحقاف", 47=>"محمد", 48=>"الفتح", 49=>"الحجرات", 50=>"ق", 51=>"الذاريات", 52=>"الطور", 53=>"النجم", 54=>"القمر", 55=>"الرحمن", 56=>"الواقعة", 57=>"الحديد", 58=>"المجادلة", 59=>"الحشر", 60=>"الممتحنة", 61=>"الصف", 62=>"الجمعة", 63=>"المنافقون", 64=>"التغابن", 65=>"الطلاق", 66=>"التحريم", 67=>"الملك", 68=>"القلم", 69=>"الحاقة", 70=>"المعارج", 71=>"نوح", 72=>"الجن", 73=>"المزمل", 74=>"المدثر", 75=>"القيامة", 76=>"الانسان", 77=>"المرسلات", 78=>"النبإ", 79=>"النازعات", 80=>"عبس", 81=>"التكوير", 82=>"الإنفطار", 83=>"المطففين", 84=>"الإنشقاق", 85=>"البروج", 86=>"الطارق", 87=>"الأعلى", 88=>"الغاشية", 89=>"الفجر", 90=>"البلد", 91=>"الشمس", 92=>"الليل", 93=>"الضحى", 94=>"الشرح", 95=>"التين", 96=>"العلق", 97=>"القدر", 98=>"البينة", 99=>"الزلزلة", 100=>"العاديات", 101=>"القارعة", 102=>"التكاثر", 103=>"العصر", 104=>"الهمزة", 105=>"الفيل", 106=>"قريش", 107=>"الماعون", 108=>"الكوثر", 109=>"الكافرون", 110=>"النصر", 111=>"المسد", 112=>"الإخلاص", 113=>"الفلق", 114=>"الناس"]; return $names[$sn] ?? "Surah {$sn}"; }
function get_total_ayahs_in_surah($sn) { $db = db_connect(); $stmt = $db->prepare("SELECT COUNT(*) FROM ayahs WHERE surah_number = ?"); $stmt->execute([$sn]); return (int)$stmt->fetchColumn(); }

// --- Routing & Controller ---
$action = $_GET['action'] ?? 'home'; $input = get_sanitized_input($_GET); $post_input = get_sanitized_input(INPUT_POST); $message = $input['message'] ?? ''; $error = $input['error'] ?? ''; $current_user = my_get_current_user(); $db = db_connect(); $csrf_token = generate_csrf_token(); $surah_list = get_surah_info($db);

// POST Actions
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $post_action = $post_input['action'] ?? ''; if (!verify_csrf_token($post_input['csrf_token'] ?? '')) { $error = 'Invalid request token.'; $action = 'error'; }
    else {
        switch ($post_action) {
            case 'login': $error_msg = handle_login($post_input); if ($error_msg) { $error = $error_msg; $action = 'login'; } break;
            case 'register': $error_msg = handle_register($post_input); if ($error_msg) { $error = $error_msg; $action = 'register'; } break;
            case 'logout': handle_logout(); break;
            case 'update_profile': require_login(); $message = "Profile updated (placeholder)."; $action = 'account'; break;
            case 'toggle_bookmark': require_login(); $b_surah = filter_var($post_input['surah'] ?? 0, FILTER_VALIDATE_INT); $b_ayah = filter_var($post_input['ayah'] ?? 0, FILTER_VALIDATE_INT); if ($b_surah && $b_ayah && $current_user) { if (is_bookmarked($current_user['id'], $b_surah, $b_ayah)) { remove_bookmark($current_user['id'], $b_surah, $b_ayah); $message = "Bookmark removed."; } else { add_bookmark($current_user['id'], $b_surah, $b_ayah); $message = "Bookmark added."; } } else { $error = "Invalid bookmark request."; } $ref = $_SERVER['HTTP_REFERER'] ?? BASE_URL; $sep = strpos($ref, '?') ? '&' : '?'; redirect($ref . $sep . 'message=' . urlencode($message) . ($error ? '&error=' . urlencode($error) : '')); break;
            case 'admin_import': require_admin(); $import_result = import_data_from_am(); if(strpos($import_result, 'Error') === 0 || strpos($import_result, 'failed') !== false) { $error = $import_result; } else { $message = $import_result; } $action = 'admin'; break;
            case 'admin_update_user': require_admin(); $uid = filter_var($post_input['user_id'] ?? 0, FILTER_VALIDATE_INT); $em = filter_var($post_input['email'] ?? '', FILTER_VALIDATE_EMAIL); $rl = in_array($post_input['role'] ?? '', ['user', 'admin']) ? $post_input['role'] : 'user'; $pw = $post_input['password'] ?? ''; $cpw = $post_input['confirm_password'] ?? ''; if (!$uid || !$em) { $error = "Invalid data."; } elseif (!empty($pw) && $pw !== $cpw) { $error = "Passwords mismatch."; } elseif ($pw && strlen($pw) < 6) { $error = "Password min 6 chars."; } else { if (update_user($uid, $em, $rl, !empty($pw) ? $pw : null)) { $message = "User updated."; } else { $error = "Update failed."; } } $action = 'admin_users'; break;
            case 'admin_delete_user': require_admin(); $uid = filter_var($post_input['user_id'] ?? 0, FILTER_VALIDATE_INT); if ($uid && $current_user && $uid != $current_user['id']) { if(delete_user($uid)) { $message = "User deleted."; } else { $error = "Delete failed."; } } else { $error = "Cannot delete user."; } $action = 'admin_users'; break;
            case 'admin_add_user': require_admin(); $em = filter_var($post_input['email'] ?? '', FILTER_VALIDATE_EMAIL); $pw = $post_input['password'] ?? ''; $rl = in_array($post_input['role'] ?? '', ['user', 'admin']) ? $post_input['role'] : 'user'; if (!$em || !$pw || strlen($pw) < 6) { $error = "Invalid email/password."; } else { $db_add = db_connect(); $stmt_check = $db_add->prepare("SELECT id FROM users WHERE email = ?"); $stmt_check->execute([$em]); if ($stmt_check->fetch()) { $error = 'Email exists.'; } else { $hp = password_hash($pw, PASSWORD_DEFAULT); $stmt_add = $db_add->prepare("INSERT INTO users (email, password, role) VALUES (?, ?, ?)"); if ($stmt_add->execute([$em, $hp, $rl])) { $message = "User added."; } else { $error = "Add failed."; } } } $action = 'admin_users'; break;
        }
    }
}

// Reading Position / Page
$cs_in = $input['surah'] ?? ($current_user['last_reading_surah'] ?? 1); $current_surah = filter_var($cs_in, FILTER_VALIDATE_INT, ['options' => ['min_range' => 1, 'max_range' => 114]]); if($current_surah === false) $current_surah = 1;
$ca_in = $input['ayah'] ?? ($current_user['last_reading_ayah'] ?? 1); $current_ayah_for_page = filter_var($ca_in, FILTER_VALIDATE_INT, ['options' => ['min_range' => 1]]); if($current_ayah_for_page === false) $current_ayah_for_page = 1;
$p_in = $input['page'] ?? 1; $page = filter_var($p_in, FILTER_VALIDATE_INT, ['options' => ['min_range' => 1]]); if($page === false) $page = 1;
if (isset($input['ayah']) && $current_surah && $current_ayah_for_page) { $page = ceil($current_ayah_for_page / AYAH_PER_PAGE); } elseif ($action === 'read' && $current_user && !isset($input['surah']) && !isset($input['page']) && !isset($input['ayah'])) { $current_surah = $current_user['last_reading_surah']; $page = ceil($current_user['last_reading_ayah'] / AYAH_PER_PAGE); } $page = max(1, $page);
if ($action === 'read' && $current_user && $current_surah && $page) { $tais = get_total_ayahs_in_surah($current_surah); if($tais > 0) { $pa = (($page - 1) * AYAH_PER_PAGE) + 1; $pa = max(1, min($pa, $tais)); update_reading_progress($current_user['id'], $current_surah, $pa); } }
?>
<!DOCTYPE html>
<html lang="ur" dir="rtl">
<head>
    <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>Quran Explorer</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com"> <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin> <link href="https://fonts.googleapis.com/css2?family=Amiri:wght@400;700&family=Noto+Nastaliq+Urdu:wght@400;700&display=swap" rel="stylesheet">
    <style>
        :root { --bg-light: #f0fff4; --text-light: #2f4f4f; --primary-light: #3cb371; --secondary-light: #ffd700; --accent-light: #90ee90; --glass-bg-light: rgba(255, 255, 255, 0.6); --bg-dark: #1a202c; --text-dark: #e2e8f0; --primary-dark: #48bb78; --secondary-dark: #f6e05e; --accent-dark: #68d391; --glass-bg-dark: rgba(45, 55, 72, 0.7); }
        html { scroll-behavior: smooth; } body { font-family: 'Noto Nastaliq Urdu', serif; background-color: var(--bg-light); color: var(--text-light); transition: background-color 0.3s, color 0.3s; }
        .dark body { background-color: var(--bg-dark); color: var(--text-dark); } .font-arabic { font-family: 'Amiri', serif; }
        .glass { background: var(--glass-bg-light); backdrop-filter: blur(10px); border: 1px solid rgba(255, 255, 255, 0.2); } .dark .glass { background: var(--glass-bg-dark); border: 1px solid rgba(255, 255, 255, 0.1); }
        nav a, nav button { color: var(--text-light); } .dark nav a, .dark nav button { color: var(--text-dark); } nav a:hover, nav button:hover { color: var(--primary-light); } .dark nav a:hover, .dark nav button:hover { color: var(--primary-dark); }
        .btn { @apply inline-block px-4 py-2 rounded shadow transition duration-150 ease-in-out; } .btn-primary { background-color: var(--primary-light); color: white; } .dark .btn-primary { background-color: var(--primary-dark); color: var(--bg-dark); } .btn-primary:hover { opacity: 0.9; }
        .btn-secondary { background-color: var(--secondary-light); color: var(--text-light); } .dark .btn-secondary { background-color: var(--secondary-dark); color: var(--bg-dark); } .btn-secondary:hover { opacity: 0.9; }
        .card { @apply bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden my-4 border border-gray-200 dark:border-gray-700; } .card-glass { @apply glass rounded-lg shadow-lg overflow-hidden my-4; }
        .form-input { @apply mt-1 block w-full px-3 py-2 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-md text-sm shadow-sm placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:border-green-500 focus:ring-1 focus:ring-green-500 dark:text-gray-200; }
        label { @apply block text-sm font-medium text-gray-700 dark:text-gray-300; }
        .pagination a, .pagination span { @apply inline-block px-3 py-1 mx-1 rounded border border-gray-300 dark:border-gray-600; } .pagination a:hover { background-color: var(--accent-light); } .dark .pagination a:hover { background-color: var(--accent-dark); color: var(--bg-dark); } .pagination .active { background-color: var(--primary-light); color: white; } .dark .pagination .active { background-color: var(--primary-dark); color: var(--bg-dark); }
        audio { @apply w-full my-2; } .ltr-input { direction: ltr; text-align: left; }
        .alert-success { @apply mb-4 p-3 rounded bg-green-100 dark:bg-green-900 border border-green-300 dark:border-green-700 text-green-800 dark:text-green-200; }
        .alert-danger { @apply mb-4 p-3 rounded bg-red-100 dark:bg-red-900 border border-red-300 dark:border-red-700 text-red-800 dark:text-red-200; }
        .alert-danger pre { @apply mt-2 text-xs whitespace-pre-wrap break-words font-mono bg-red-50 dark:bg-red-800 p-2 rounded; }
    </style>
    <script> const LS=localStorage; function tdm(){const d=document.documentElement.classList.toggle('dark');LS.setItem('darkMode',d?'true':'false');} function aidm(){if(LS.getItem('darkMode')==='true'||(!LS.getItem('darkMode')&&window.matchMedia&&window.matchMedia('(prefers-color-scheme: dark)').matches)){document.documentElement.classList.add('dark');}else{document.documentElement.classList.remove('dark');}} function pa(b,u){let p=document.getElementById('persistent-audio-player'),as=document.getElementById('audio-source'),pb=document.querySelector('.playing-audio'),pc=document.getElementById('persistent-audio-player-container');if(pb&&pb!==b){pb.textContent='🔊';pb.classList.remove('playing-audio','bg-yellow-400','rounded-full','p-1');}if(b.classList.contains('playing-audio')){p.pause();b.textContent='🔊';b.classList.remove('playing-audio','bg-yellow-400','rounded-full','p-1');pc.style.display='none';}else{if(u){if(!as){const s=document.createElement('source');s.id='audio-source';s.type='audio/mpeg';p.appendChild(s);window.audioSrc=s;}window.audioSrc.src=u;p.load();p.play().then(()=>{b.textContent='⏸️';b.classList.add('playing-audio','bg-yellow-400','rounded-full','p-1');pc.style.display='block';}).catch(e=>console.error("Audio fail:",e));}else console.error("No URL");}p.onended=()=>{const btn=document.querySelector('.playing-audio');if(btn){btn.textContent='🔊';btn.classList.remove('playing-audio','bg-yellow-400','rounded-full','p-1');}pc.style.display='none';};} function gsa(){const sn=document.getElementById('goto-surah').value,an=document.getElementById('goto-ayah').value;if(sn){let u=`<?= BASE_URL ?>?action=read&surah=${sn}`;if(an)u+=`&ayah=${an}`;window.location.href=u;}} aidm();document.addEventListener('DOMContentLoaded',()=>{const pc=document.getElementById('persistent-audio-player-container'),p=document.getElementById('persistent-audio-player');if(p&&!p.paused)pc.style.display='block';}); </script>
</head>
<body class="bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-300">
<nav class="bg-white dark:bg-gray-800 shadow-md py-3 px-6 sticky top-0 z-50 glass"> <div class="container mx-auto flex justify-between items-center"> <a href="<?= BASE_URL ?>" class="text-xl font-bold font-arabic" style="color: var(--primary-light);"><span class="dark:text-green-400">قرآن</span> <span class="text-sm font-sans text-gray-600 dark:text-gray-400">Explorer</span></a> <div class="flex items-center space-x-4 rtl:space-x-reverse"> <form action="<?= BASE_URL ?>" method="GET" class="flex"> <input type="hidden" name="action" value="search"> <input type="text" name="q" placeholder="تلاش کریں..." value="<?= $input['q'] ?? '' ?>" class="px-2 py-1 border rounded-l dark:bg-gray-700 dark:border-gray-600 text-sm"> <button type="submit" class="px-3 py-1 bg-green-600 text-white rounded-r hover:bg-green-700 text-sm">🔍</button> </form> <a href="<?= BASE_URL ?>?action=read" class="hover:text-green-600 dark:hover:text-green-400">📖 پڑھیں</a> <?php if (is_logged_in()): ?> <a href="<?= BASE_URL ?>?action=account" class="hover:text-green-600 dark:hover:text-green-400">اکاؤنٹ</a> <?php if (is_admin()): ?> <a href="<?= BASE_URL ?>?action=admin" class="hover:text-red-600 dark:hover:text-red-400 font-bold">ایڈمن</a> <?php endif; ?> <form action="<?= BASE_URL ?>" method="POST" class="inline"> <input type="hidden" name="action" value="logout"> <input type="hidden" name="csrf_token" value="<?= $csrf_token ?>"> <button type="submit" class="hover:text-yellow-600 dark:hover:text-yellow-400">لاگ آؤٹ</button> </form> <?php else: ?> <a href="<?= BASE_URL ?>?action=login" class="hover:text-green-600 dark:hover:text-green-400">لاگ ان</a> <a href="<?= BASE_URL ?>?action=register" class="hover:text-green-600 dark:hover:text-green-400">رجسٹر</a> <?php endif; ?> <button onclick="tdm()" class="text-xl">🌙/☀️</button> </div> </div> </nav>
<main class="container mx-auto p-4 lg:p-6 mt-4">
    <?php if ($message): ?><div class="alert-success"><?= nl2br(sanitize($message)) ?></div><?php endif; ?>
    <?php if ($error): ?><div class="alert-danger"><?= $error /* Error from import already contains <br> and <pre> */ ?></div><?php endif; ?>

    <?php
    switch ($action) {
        case 'read': $sn = $current_surah; $tais = get_total_ayahs_in_surah($sn); $tp = $tais > 0 ? ceil($tais / AYAH_PER_PAGE) : 1; $cp = max(1, min($page, $tp)); $ayahs = get_ayahs($sn, $cp); $sname = get_surah_name($sn); ?> <div class="mb-6 p-4 rounded-lg glass flex justify-between items-center flex-wrap gap-4"> <h2 class="text-2xl font-bold font-arabic">سورۃ <?= $sname ?> (<?= $sn ?>)</h2> <div class="flex items-center space-x-2 rtl:space-x-reverse flex-wrap gap-2"> <span>سورۃ:</span> <select id="goto-surah" class="p-1 border rounded dark:bg-gray-700 dark:border-gray-600" onchange="gsa()"> <?php foreach ($surah_list as $s): ?> <option value="<?= $s['number'] ?>" <?= $s['number'] == $sn ? 'selected' : '' ?>><?= $s['number'] ?>. <?= get_surah_name($s['number']) ?></option> <?php endforeach; ?> </select> <span>آیت:</span> <input type="number" id="goto-ayah" min="1" <?= $tais > 0 ? 'max="'.$tais.'"' : '' ?> placeholder="نمبر" class="w-20 p-1 border rounded dark:bg-gray-700 dark:border-gray-600"> <button onclick="gsa()" class="btn btn-secondary text-sm">جائیں</button> </div> <span>صفحہ <?= $cp ?> / <?= $tp ?></span> </div> <div class="space-y-5"> <?php if ($cp == 1 && $sn != 1 && $sn != 9): ?> <p class="text-center font-arabic text-xl my-4">بِسْمِ اللَّهِ الرَّحْمَٰنِ الرَّحِيمِ</p> <?php endif; ?> <?php if (empty($ayahs)): ?> <p class="text-center text-orange-500 card p-5"><?= $tais === 0 ? 'اس سورہ کے لئے آیات نہیں ہیں۔ ڈیٹا درآمد کریں۔' : 'اس صفحہ پر آیات نہیں۔' ?></p> <?php else: ?> <?php foreach ($ayahs as $ayah): $an = $ayah['ayah_number']; $au = get_audio_url($sn, $an); $is_bm = $current_user ? is_bookmarked($current_user['id'], $sn, $an) : false; ?> <div id="ayah-<?= $sn ?>-<?= $an ?>" class="card-glass p-4 md:p-6 shadow-lg rounded-lg relative"> <p class="font-arabic text-2xl md:text-3xl leading-relaxed mb-3 text-right"><?= sanitize($ayah['arabic_text']) ?> <span class="text-sm text-yellow-600 dark:text-yellow-400">(<?= $an ?>)</span></p> <p class="text-lg md:text-xl leading-relaxed text-right"><?= sanitize($ayah['urdu_translation']) ?></p> <div class="absolute top-2 left-2 flex space-x-1 rtl:space-x-reverse"> <?php if ($au): ?><button onclick="pa(this, '<?= $au ?>')" title="آڈیو" class="text-xl cursor-pointer p-1 rounded hover:bg-gray-200 dark:hover:bg-gray-600">🔊</button><?php endif; ?> <?php if (is_logged_in()): ?> <form action="<?= BASE_URL ?>" method="POST" class="inline"> <input type="hidden" name="action" value="toggle_bookmark"> <input type="hidden" name="csrf_token" value="<?= $csrf_token ?>"> <input type="hidden" name="surah" value="<?= $sn ?>"> <input type="hidden" name="ayah" value="<?= $an ?>"> <button type="submit" title="<?= $is_bm ? 'بک مارک ہٹائیں' : 'بک مارک کریں' ?>" class="text-xl cursor-pointer p-1 rounded hover:bg-gray-200 dark:hover:bg-gray-600"><?= $is_bm ? '★' : '☆' ?></button> </form> <?php endif; ?> </div> </div> <?php endforeach; ?> <?php endif; ?> </div> <div class="mt-8 flex justify-between items-center pagination flex-wrap gap-2"> <div> <?php if ($cp > 1): ?><a href="<?= BASE_URL ?>?action=read&surah=<?= $sn ?>&page=<?= $cp - 1 ?>" class="btn btn-secondary">« پچھلا</a><?php else: ?><span class="btn btn-secondary opacity-50 cursor-not-allowed">« پچھلا</span><?php endif; ?> <?php if ($cp < $tp): ?><a href="<?= BASE_URL ?>?action=read&surah=<?= $sn ?>&page=<?= $cp + 1 ?>" class="btn btn-secondary">اگلا »</a><?php else: ?><span class="btn btn-secondary opacity-50 cursor-not-allowed">اگلا »</span><?php endif; ?> </div> <div> <?php if ($sn > 1): ?><a href="<?= BASE_URL ?>?action=read&surah=<?= $sn - 1 ?>" class="btn btn-primary">« پچھلی سورۃ</a><?php endif; ?> <?php if ($sn < 114): ?><a href="<?= BASE_URL ?>?action=read&surah=<?= $sn + 1 ?>" class="btn btn-primary">اگلی سورۃ »</a><?php endif; ?> </div> </div> <?php break;
        case 'search': $q = trim($input['q'] ?? ''); $sp = max(1, filter_var($input['page'] ?? 1, FILTER_VALIDATE_INT)); $sr = []; $tr = 0; $tp = 0; if (!empty($q)) { $sd = search_ayahs($q, $sp); $sr = $sd['results']; $tr = $sd['total']; $tp = ceil($tr / SEARCH_RESULTS_PER_PAGE); } ?> <h2 class="text-2xl font-bold mb-4">تلاش نتائج: "<?= sanitize($q) ?>"</h2> <?php if (empty($q)): ?><p>تلاش لفظ درج کریں۔</p> <?php elseif ($tr === 0): ?><p>کوئی نتائج نہیں۔</p> <?php else: ?> <p class="mb-4"><?= $tr ?> نتائج۔ صفحہ <?= $sp ?> / <?= $tp ?></p> <div class="space-y-4"> <?php foreach ($sr as $ayah): $sn = $ayah['surah_number']; $an = $ayah['ayah_number']; $sname = get_surah_name($sn); $au = get_audio_url($sn, $an); $is_bm = $current_user ? is_bookmarked($current_user['id'], $sn, $an) : false; ?> <div class="card-glass p-4 md:p-6 shadow-lg rounded-lg relative"> <p class="text-sm text-gray-600 dark:text-gray-400 mb-2"><a href="<?= BASE_URL ?>?action=read&surah=<?= $sn ?>&ayah=<?= $an ?>" class="hover:underline">سورۃ <?= $sname ?> (<?= $sn ?>) : آیت <?= $an ?></a></p> <p class="font-arabic text-xl md:text-2xl leading-relaxed mb-3 text-right"><?= sanitize($ayah['arabic_text']) ?></p> <p class="text-md md:text-lg leading-relaxed text-right"><?= sanitize($ayah['urdu_translation']) ?></p> <div class="absolute top-2 left-2 flex space-x-1 rtl:space-x-reverse"> <?php if ($au): ?><button onclick="pa(this, '<?= $au ?>')" title="آڈیو" class="text-lg cursor-pointer p-1 rounded hover:bg-gray-200 dark:hover:bg-gray-600">🔊</button><?php endif; ?> <?php if (is_logged_in()): ?> <form action="<?= BASE_URL ?>" method="POST" class="inline"> <input type="hidden" name="action" value="toggle_bookmark"> <input type="hidden" name="csrf_token" value="<?= $csrf_token ?>"> <input type="hidden" name="surah" value="<?= $sn ?>"> <input type="hidden" name="ayah" value="<?= $an ?>"> <button type="submit" title="<?= $is_bm ? 'ہٹائیں' : 'بک مارک' ?>" class="text-lg cursor-pointer p-1 rounded hover:bg-gray-200 dark:hover:bg-gray-600"><?= $is_bm ? '★' : '☆' ?></button> </form> <?php endif; ?> </div> </div> <?php endforeach; ?> </div> <div class="mt-6 pagination text-center"> <?php if ($tp > 1): ?> <?php if ($sp > 1): ?><a href="<?= BASE_URL ?>?action=search&q=<?= urlencode($q) ?>&page=<?= $sp - 1 ?>">« پچھلا</a><?php endif; ?> <?php for ($i = 1; $i <= $tp; $i++): ?> <?php if ($i == $sp): ?><span class="active"><?= $i ?></span><?php else: ?><a href="<?= BASE_URL ?>?action=search&q=<?= urlencode($q) ?>&page=<?= $i ?>"><?= $i ?></a><?php endif; ?> <?php endfor; ?> <?php if ($sp < $tp): ?><a href="<?= BASE_URL ?>?action=search&q=<?= urlencode($q) ?>&page=<?= $sp + 1 ?>">اگلا »</a><?php endif; ?> <?php endif; ?> </div> <?php endif; ?> <?php break;
        case 'login': if (is_logged_in()) redirect(BASE_URL . '?action=account'); ?> <div class="max-w-md mx-auto mt-10 card p-8"> <h2 class="text-2xl font-bold text-center mb-6">لاگ ان</h2> <form action="<?= BASE_URL ?>" method="POST"> <input type="hidden" name="action" value="login"> <input type="hidden" name="csrf_token" value="<?= $csrf_token ?>"> <div class="mb-4"> <label for="email">ای میل:</label> <input type="email" id="email" name="email" required class="form-input ltr-input"> </div> <div class="mb-6"> <label for="password">پاس ورڈ:</label> <input type="password" id="password" name="password" required class="form-input ltr-input"> </div> <button type="submit" class="w-full btn btn-primary">لاگ ان کریں</button> </form> <p class="mt-4 text-center text-sm">اکاؤنٹ نہیں؟ <a href="<?= BASE_URL ?>?action=register" class="text-green-600 dark:text-green-400 hover:underline">رجسٹر کریں</a></p> </div> <?php break;
        case 'register': if (is_logged_in()) redirect(BASE_URL . '?action=account'); ?> <div class="max-w-md mx-auto mt-10 card p-8"> <h2 class="text-2xl font-bold text-center mb-6">نیا اکاؤنٹ</h2> <form action="<?= BASE_URL ?>" method="POST"> <input type="hidden" name="action" value="register"> <input type="hidden" name="csrf_token" value="<?= $csrf_token ?>"> <div class="mb-4"> <label for="email">ای میل:</label> <input type="email" id="email" name="email" required class="form-input ltr-input"> </div> <div class="mb-4"> <label for="password">پاس ورڈ (کم 6 حروف):</label> <input type="password" id="password" name="password" required minlength="6" class="form-input ltr-input"> </div> <div class="mb-6"> <label for="confirm_password">پاس ورڈ تصدیق:</label> <input type="password" id="confirm_password" name="confirm_password" required class="form-input ltr-input"> </div> <button type="submit" class="w-full btn btn-primary">رجسٹر کریں</button> </form> <p class="mt-4 text-center text-sm">پہلے سے اکاؤنٹ ہے؟ <a href="<?= BASE_URL ?>?action=login" class="text-green-600 dark:text-green-400 hover:underline">لاگ ان کریں</a></p> </div> <?php break;
        case 'account': require_login(); $bms = get_bookmarks($current_user['id']); $lrs = $current_user['last_reading_surah'] ?? 1; $lra = $current_user['last_reading_ayah'] ?? 1; $lrsn = get_surah_name($lrs); ?> <h2 class="text-2xl font-bold mb-6">میرا اکاؤنٹ</h2> <div class="grid grid-cols-1 md:grid-cols-2 gap-6"> <div class="card p-6"> <h3 class="text-xl font-semibold mb-4">پروفائل</h3> <p><strong>ای میل:</strong> <span dir="ltr"><?= sanitize($current_user['email']) ?></span></p> <p><strong>کردار:</strong> <?= sanitize(ucfirst($current_user['role'])) ?></p> <p class="mt-4"><strong>آخری پڑھا:</strong> <a href="<?= BASE_URL ?>?action=read&surah=<?= $lrs ?>&ayah=<?= $lra ?>" class="text-green-600 dark:text-green-400 hover:underline"> سورۃ <?= $lrsn ?> (<?= $lrs ?>)، آیت <?= $lra ?> </a> </p> </div> <div class="card p-6"> <h3 class="text-xl font-semibold mb-4">بک مارکس (<?= count($bms) ?>)</h3> <?php if (empty($bms)): ?><p>کوئی بک مارک نہیں۔</p> <?php else: ?> <ul class="space-y-3 max-h-96 overflow-y-auto"> <?php foreach ($bms as $bm): $bs = $bm['surah_number']; $ba = $bm['ayah_number']; $bsn = get_surah_name($bs); ?> <li class="border-b dark:border-gray-700 pb-2"> <div class="flex justify-between items-start"> <a href="<?= BASE_URL ?>?action=read&surah=<?= $bs ?>&ayah=<?= $ba ?>" class="hover:text-green-600 dark:hover:text-green-400 flex-1"> <strong class="font-arabic">سورۃ <?= $bsn ?> (<?= $bs ?>):<?= $ba ?></strong> <p class="text-sm font-arabic mt-1 truncate"><?= sanitize($bm['arabic_text']) ?></p> <p class="text-sm mt-1 truncate"><?= sanitize($bm['urdu_translation']) ?></p> </a> <form action="<?= BASE_URL ?>" method="POST" class="inline ml-2 rtl:mr-2 flex-shrink-0"> <input type="hidden" name="action" value="toggle_bookmark"> <input type="hidden" name="csrf_token" value="<?= $csrf_token ?>"> <input type="hidden" name="surah" value="<?= $bs ?>"> <input type="hidden" name="ayah" value="<?= $ba ?>"> <button type="submit" title="ہٹائیں" class="text-red-500 hover:text-red-700 text-lg">×</button> </form> </div> </li> <?php endforeach; ?> </ul> <?php endif; ?> </div> </div> <?php break;
        case 'admin': require_admin(); $stats = get_stats(); ?> <h2 class="text-2xl font-bold mb-6">ایڈمن ڈیش بورڈ</h2> <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8"> <div class="card p-6 text-center"><h3 class="text-lg font-semibold mb-2">صارفین</h3><p class="text-3xl font-bold"><?= $stats['total_users'] ?></p></div> <div class="card p-6 text-center"><h3 class="text-lg font-semibold mb-2">آیات</h3><p class="text-3xl font-bold"><?= $stats['total_ayahs'] ?></p></div> <div class="card p-6 text-center"><h3 class="text-lg font-semibold mb-2">بک مارکس</h3><p class="text-3xl font-bold"><?= $stats['total_bookmarks'] ?></p></div> </div> <div class="grid grid-cols-1 md:grid-cols-2 gap-6"> <div class="card p-6"> <h3 class="text-xl font-semibold mb-4">انتظامی امور</h3> <ul class="space-y-2"> <li><a href="<?= BASE_URL ?>?action=admin_users" class="text-green-600 dark:text-green-400 hover:underline">صارفین کا انتظام</a></li> </ul> </div> <div class="card p-6"> <h3 class="text-xl font-semibold mb-4">ڈیٹا امپورٹ</h3> <?php $dbc = db_connect(); $ac = $dbc->query("SELECT COUNT(*) FROM ayahs")->fetchColumn(); ?> <p class="mb-3">موجودہ آیات: <?= $ac ?></p> <?php if (!file_exists(DATA_FILE)): ?><p class="text-red-500">ڈیٹا فائل (<?= DATA_FILE ?>) نہیں ملی۔</p> <?php else: ?> <form action="<?= BASE_URL ?>" method="POST" onsubmit="return confirm('ڈیٹا درآمد کریں؟ یہ کچھ وقت لے سکتا ہے۔');"> <input type="hidden" name="action" value="admin_import"> <input type="hidden" name="csrf_token" value="<?= $csrf_token ?>"> <button type="submit" class="btn btn-primary">data.AM سے درآمد</button> </form> <p class="text-sm mt-2 text-gray-600 dark:text-gray-400">نوٹ: موجودہ آیات کو نظر انداز کیا جائے گا۔</p> <?php endif; ?> </div> </div> <?php break;
        case 'admin_users': require_admin(); $aus = get_all_users(); $euid = filter_var($input['edit_id'] ?? null, FILTER_VALIDATE_INT); $ute = $euid ? get_user_by_id($euid) : null; ?> <h2 class="text-2xl font-bold mb-6">صارفین کا انتظام</h2> <div class="card p-6 mb-8"> <h3 class="text-xl font-semibold mb-4"><?= $ute ? 'ترمیم کریں' : 'نیا صارف' ?></h3> <form action="<?= BASE_URL ?>" method="POST"> <input type="hidden" name="action" value="<?= $ute ? 'admin_update_user' : 'admin_add_user' ?>"> <input type="hidden" name="csrf_token" value="<?= $csrf_token ?>"> <?php if ($ute): ?> <input type="hidden" name="user_id" value="<?= $ute['id'] ?>"> <?php endif; ?> <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-4"> <div> <label for="email">ای میل:</label> <input type="email" id="email" name="email" required class="form-input ltr-input" value="<?= sanitize($ute['email'] ?? '') ?>"> </div> <div> <label for="role">کردار:</label> <select id="role" name="role" required class="form-input"> <option value="user" <?= (($ute['role'] ?? 'user') == 'user') ? 'selected' : '' ?>>صارف</option> <option value="admin" <?= (($ute['role'] ?? '') == 'admin') ? 'selected' : '' ?>>ایڈمن</option> </select> </div> <div> <label for="password">نیا پاس ورڈ (<?= $ute ? 'اختیاری' : 'ضروری' ?>):</label> <input type="password" id="password" name="password" class="form-input ltr-input" <?= !$ute ? 'required minlength="6"' : 'minlength="6"' ?>> </div> <?php if ($ute): ?> <div> <label for="confirm_password">پاس ورڈ تصدیق:</label> <input type="password" id="confirm_password" name="confirm_password" class="form-input ltr-input"> </div> <?php endif; ?> </div> <div class="flex justify-end space-x-2 rtl:space-x-reverse"> <?php if ($ute): ?> <a href="<?= BASE_URL ?>?action=admin_users" class="btn btn-secondary">منسوخ</a> <?php endif; ?> <button type="submit" class="btn btn-primary"><?= $ute ? 'اپ ڈیٹ' : 'شامل' ?></button> </div> </form> </div> <div class="card overflow-x-auto"> <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400"> <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400"> <tr> <th scope="col" class="px-6 py-3">ID</th> <th scope="col" class="px-6 py-3">ای میل</th> <th scope="col" class="px-6 py-3">کردار</th> <th scope="col" class="px-6 py-3">اعمال</th> </tr> </thead> <tbody> <?php foreach ($aus as $user): ?> <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600"> <td class="px-6 py-4"><?= $user['id'] ?></td> <td class="px-6 py-4 ltr-input"><?= sanitize($user['email']) ?></td> <td class="px-6 py-4"><?= ucfirst(sanitize($user['role'])) ?></td> <td class="px-6 py-4 flex space-x-2 rtl:space-x-reverse"> <a href="<?= BASE_URL ?>?action=admin_users&edit_id=<?= $user['id'] ?>" class="font-medium text-blue-600 dark:text-blue-500 hover:underline">ترمیم</a> <?php if ($current_user && $user['id'] != $current_user['id']): ?> <form action="<?= BASE_URL ?>" method="POST" class="inline" onsubmit="return confirm('صارف حذف کریں؟');"> <input type="hidden" name="action" value="admin_delete_user"> <input type="hidden" name="csrf_token" value="<?= $csrf_token ?>"> <input type="hidden" name="user_id" value="<?= $user['id'] ?>"> <button type="submit" class="font-medium text-red-600 dark:text-red-500 hover:underline">حذف</button> </form> <?php endif; ?> </td> </tr> <?php endforeach; ?> </tbody> </table> </div> <?php break;
        case 'error': ?> <h2 class="text-2xl font-bold text-red-600 mb-4">خرابی</h2> <p><?= nl2br($error ?: 'غیر متوقع خرابی۔') ?></p> <p><a href="<?= BASE_URL ?>" class="text-green-600 dark:text-green-400 hover:underline mt-4 inline-block">مرکزی صفحہ</a></p> <?php break;
        case 'home': default: $ras = get_random_ayahs(10); ?> <div class="text-center mb-10"> <h1 class="text-4xl font-bold font-arabic text-green-700 dark:text-green-400 mb-2">قرآن مجید</h1> <p class="text-lg text-gray-600 dark:text-gray-400">پڑھیں، تلاش کریں، دریافت کریں</p> </div> <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-10"> <div class="card-glass p-6 text-center"> <h3 class="text-2xl font-semibold mb-3">📖 پڑھیں</h3> <p class="mb-4">عربی متن اور اردو ترجمہ۔</p> <?php $ss = $current_user['last_reading_surah'] ?? 1; $sa = $current_user['last_reading_ayah'] ?? 1; $ssn = get_surah_name($ss); ?> <a href="<?= BASE_URL ?>?action=read&surah=<?= $ss ?>&ayah=<?= $sa ?>" class="btn btn-primary"> <?= $current_user ? 'جاری رکھیں' : 'شروع کریں' ?> (سورۃ <?= $ssn ?>) </a> </div> <div class="card-glass p-6 text-center"> <h3 class="text-2xl font-semibold mb-3">🔍 تلاش</h3> <p class="mb-4">عربی یا اردو میں الفاظ۔</p> <form action="<?= BASE_URL ?>" method="GET" class="flex justify-center"> <input type="hidden" name="action" value="search"> <input type="text" name="q" placeholder="مثال: اللہ" class="px-3 py-2 border rounded-r-none rounded-l dark:bg-gray-700 dark:border-gray-600 w-2/3"> <button type="submit" class="px-4 py-2 bg-green-600 text-white rounded-l-none rounded-r hover:bg-green-700">تلاش</button> </form> </div> </div> <h2 class="text-2xl font-bold mb-4 text-center">✨ آج کی آیات ✨</h2> <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4"> <?php foreach ($ras as $ayah): $rs = $ayah['surah_number']; $ra = $ayah['ayah_number']; $rsn = get_surah_name($rs); $au = get_audio_url($rs, $ra); $is_bm = $current_user ? is_bookmarked($current_user['id'], $rs, $ra) : false; ?> <div class="card-glass p-4 relative"> <p class="text-xs text-gray-600 dark:text-gray-400 mb-2"> <a href="<?= BASE_URL ?>?action=read&surah=<?= $rs ?>&ayah=<?= $ra ?>" class="hover:underline"> سورۃ <?= $rsn ?> (<?= $rs ?>):<?= $ra ?> </a> </p> <p class="font-arabic text-lg mb-2 text-right"><?= sanitize($ayah['arabic_text']) ?></p> <p class="text-sm text-right"><?= sanitize($ayah['urdu_translation']) ?></p> <div class="absolute top-1 left-1 flex space-x-1 rtl:space-x-reverse"> <?php if ($au): ?><button onclick="pa(this, '<?= $au ?>')" title="آڈیو" class="text-sm cursor-pointer p-1 rounded hover:bg-gray-200 dark:hover:bg-gray-600">🔊</button><?php endif; ?> <?php if (is_logged_in()): ?> <form action="<?= BASE_URL ?>" method="POST" class="inline"> <input type="hidden" name="action" value="toggle_bookmark"> <input type="hidden" name="csrf_token" value="<?= $csrf_token ?>"> <input type="hidden" name="surah" value="<?= $rs ?>"> <input type="hidden" name="ayah" value="<?= $ra ?>"> <button type="submit" title="<?= $is_bm ? 'ہٹائیں' : 'بک مارک' ?>" class="text-sm cursor-pointer p-1 rounded hover:bg-gray-200 dark:hover:bg-gray-600"><?= $is_bm ? '★' : '☆' ?></button> </form> <?php endif; ?> </div> </div> <?php endforeach; ?> </div> <?php break;
    } ?>
</main>
<div id="persistent-audio-player-container" class="sticky bottom-0 left-0 right-0 p-2 bg-gray-200 dark:bg-gray-700 z-40 shadow-inner" style="display: none;"> <audio id="persistent-audio-player" controls class="w-full"> <source id="audio-source" src="" type="audio/mpeg">Audio not supported.</audio> </div>
<footer class="mt-12 py-6 text-center text-sm text-gray-500 dark:text-gray-400 border-t dark:border-gray-700"> قرآن ایکسپلورر &copy; <?= date('Y') ?> </footer>
</body></html>
